# [START servicemesh_deployment_admin-backend-server]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "admin-backend.fullname" . }}-server
  labels:
    {{- include "admin-backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "admin-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "admin-backend.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "admin-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
          env:
            - name: PORT
              value: {{ .Values.containerPort | quote }}
            - name: APP_PROTOCOL
              value: {{ .Values.env.APP_PROTOCOL | quote }}
            - name: APP_URL
              value: {{ .Values.env.APP_URL | quote }}
            # Session Secret - Consider using Kubernetes secrets
            - name: SESSION_SECRET
              value: {{ .Values.env.SESSION_SECRET | quote }}
            # Database - Consider using Kubernetes secrets
            - name: DATABASE_URL
              value: {{ .Values.env.DATABASE_URL | quote }}
            # JWT - Consider using Kubernetes secrets
            - name: JWT_SECRET
              value: {{ .Values.env.JWT_SECRET | quote }}
            - name: JWT_ACCESS_EXPIRATION_MINUTES
              value: {{ .Values.env.JWT_ACCESS_EXPIRATION_MINUTES | quote }}
            - name: JWT_REFRESH_EXPIRATION_DAYS
              value: {{ .Values.env.JWT_REFRESH_EXPIRATION_DAYS | quote }}
            - name: JWT_RESET_PASSWORD_EXPIRATION_MINUTES
              value: {{ .Values.env.JWT_RESET_PASSWORD_EXPIRATION_MINUTES | quote }}
            - name: JWT_VERIFY_EMAIL_EXPIRATION_MINUTES
              value: {{ .Values.env.JWT_VERIFY_EMAIL_EXPIRATION_MINUTES | quote }}
            # SMTP - Consider using Kubernetes secrets
            - name: SMTP_HOST
              value: {{ .Values.env.SMTP_HOST | quote }}
            - name: SMTP_PORT
              value: {{ .Values.env.SMTP_PORT | quote }}
            - name: SMTP_USERNAME
              value: {{ .Values.env.SMTP_USERNAME | quote }}
            - name: SMTP_PASSWORD
              value: {{ .Values.env.SMTP_PASSWORD | quote }}
            - name: EMAIL_FROM
              value: {{ .Values.env.EMAIL_FROM | quote }}
            - name: RESET_PASSWORD_URL
              value: {{ .Values.env.RESET_PASSWORD_URL | quote }}
            # GCP
            - name: GCP_BUCKET_NAME
              value: {{ .Values.env.GCP_BUCKET_NAME | quote }}
            - name: GCP_CREDENTIALS_FILE_PATH
              value: {{ .Values.env.GCP_CREDENTIALS_FILE_PATH | quote }}
            # Azure AD / SAML
            - name: AZURE_AD_ENTRYPOINT
              value: {{ .Values.env.AZURE_AD_ENTRYPOINT | quote }}
            - name: ISSUER
              value: {{ .Values.env.ISSUER | quote }}
            - name: CALLBACK_URL
              value: {{ .Values.env.CALLBACK_URL | quote }}
            - name: AZURE_AD_CERT
              value: {{ .Values.env.AZURE_AD_CERT | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.volumeMounts.serviceAccount.name }}
              mountPath: {{ .Values.volumeMounts.serviceAccount.mountPath }}
              readOnly: {{ .Values.volumeMounts.serviceAccount.readOnly }}
            - name: {{ .Values.volumeMounts.adminSecret.name }}
              mountPath: {{ .Values.volumeMounts.adminSecret.mountPath }}
              readOnly: {{ .Values.volumeMounts.adminSecret.readOnly }}

      volumes:
        - name: {{ .Values.volumes.serviceAccount.name }}
          secret:
            secretName: {{ .Values.volumes.serviceAccount.secret.secretName }}
        - name: {{ .Values.volumes.adminSecret.name }}
          secret:
            secretName: {{ .Values.volumes.adminSecret.secret.secretName }}

      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
# [END servicemesh_deployment_admin-backend-server]
---
# [START servicemesh_service_admin-backend-svc_loadbalancer]
apiVersion: v1
kind: Service
metadata:
  name: {{ include "admin-backend.fullname" . }}-svc # LoadBalancer Service
  labels:
    {{- include "admin-backend.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.loadBalancer.type }}
  ports:
    - port: {{ .Values.service.loadBalancer.port }}
      targetPort: {{ .Values.service.loadBalancer.targetPort }}
      protocol: TCP
      name: http
  selector:
    {{- include "admin-backend.selectorLabels" . | nindent 4 }}
# [END servicemesh_service_admin-backend-svc_loadbalancer]
---
# [START servicemesh_service_admin-backend-svc_clusterip]
apiVersion: v1
kind: Service
metadata:
  name: {{ include "admin-backend.fullname" . }}-svc{{ .Values.service.clusterIP.nameSuffix }} # ClusterIP Service
  {{- if .Values.service.clusterIP.namespace }}
  namespace: {{ .Values.service.clusterIP.namespace }}
  {{- end }}
  {{- with .Values.service.clusterIP.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "admin-backend.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.clusterIP.type }}
  ports:
    - port: {{ .Values.service.clusterIP.port }}
      targetPort: {{ .Values.service.clusterIP.targetPort }}
      protocol: TCP
      name: http
  selector:
    {{- include "admin-backend.selectorLabels" . | nindent 4 }}
# [END servicemesh_service_admin-backend-svc_clusterip]
---
